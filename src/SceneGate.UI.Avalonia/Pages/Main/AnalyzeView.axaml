<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fluent="using:FluentAvalonia.UI.Controls"
             xmlns:local="using:SceneGate.UI.Pages.Main"
             xmlns:c="using:SceneGate.UI.Pages"
             xmlns:ctrlData="using:SceneGate.UI.ControlsData"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="500"
             x:Class="SceneGate.UI.Pages.Main.AnalyzeView"
             x:DataType="local:AnalyzeViewModel">

  <Design.DataContext>
    <local:AnalyzeViewModel />
  </Design.DataContext>

  <UserControl.Resources>
    <c:NodeFormatToIconConverter x:Key="Format2Icon" />
    <c:TreeGridConverterKindToIconConverter x:Key="ConverterKind2Icon" />
  </UserControl.Resources>
  
  <Grid ColumnDefinitions="350,Auto,*">
    <Grid Grid.Column="0"
          RowDefinitions="Auto,*,Auto,250"
          MinWidth="300">
      <Grid Grid.Row="0" ColumnDefinitions="*,Auto,Auto" Margin="5">
        <TextBlock Grid.Column="0"
                   Text="Nodes"
                   VerticalAlignment="Center"
                   FontWeight="Bold"
                   Theme="{StaticResource BodyTextBlockStyle}" />
        <Button Grid.Column="1" Margin="5 0" Command="{Binding AddFileCommand}">
          <fluent:SymbolIcon Symbol="OpenFile" />
        </Button>
        <Button Grid.Column="2" Command="{Binding AddFolderCommand}">
          <fluent:SymbolIcon Symbol="OpenLocal" />
        </Button>
      </Grid>
      <Separator Grid.Row="1" VerticalAlignment="Top" />

      <TreeView Grid.Row="1"
                SelectedItem="{Binding SelectedNode}"
                ItemsSource="{Binding Nodes}"
                SelectionMode="Single"
                DoubleTapped="NodeTreeViewDoubleTapped">
        <TreeView.ItemTemplate>
          <TreeDataTemplate ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
              <fluent:SymbolIcon Symbol="{Binding Kind, Converter={StaticResource Format2Icon}}" />
              <TextBlock Margin="10 0 0 0" Text="{Binding Name}" />
            </StackPanel>
          </TreeDataTemplate>
        </TreeView.ItemTemplate>
      </TreeView>

      <GridSplitter Grid.Row="2" ResizeDirection="Rows" />

      <Expander Grid.Row="3"
                ExpandDirection="Down"
                IsExpanded="True">
        <Expander.Header>
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Converters"
                       VerticalAlignment="Center"
                       FontWeight="Bold"
                       Theme="{StaticResource BodyTextBlockStyle}" />
            <TextBox Text="{Binding ConverterFilter}"
                     Margin="15 0 0 0"
                     Watermark="Filter..."
                     MinWidth="150"
                     HorizontalAlignment="Right" />
          </StackPanel>
        </Expander.Header>
        <TreeView SelectedItem="{Binding SelectedConverter}"
                  ItemsSource="{Binding CompatibleConverters}"
                  SelectionMode="Single"
                  DoubleTapped="ConvertersTreeViewDoubleTapped">
          <TreeView.ItemTemplate>
            <TreeDataTemplate ItemsSource="{Binding Children}">
              <StackPanel Orientation="Horizontal">
                <fluent:SymbolIcon Symbol="{Binding Kind, Converter={StaticResource ConverterKind2Icon}}" />
                <TextBlock Margin="10 0 0 0" Text="{Binding DisplayName}" />
              </StackPanel>
            </TreeDataTemplate>
          </TreeView.ItemTemplate>
        </TreeView>
      </Expander>
    </Grid>

    <GridSplitter Grid.Column="1" ResizeDirection="Columns" />

    <fluent:TabView Grid.Column="2"
                    IsAddTabButtonVisible="False"
                    TabItems="{Binding FormatViewTabs}"
                    TabCloseRequested="TabViewTabCloseRequested"
                    SelectedItem="{Binding SelectedTab}">
      <fluent:TabView.TabItemTemplate>
        <DataTemplate DataType="ctrlData:NodeFormatTab">
          <fluent:TabViewItem Header="{Binding Name}"
                              Content="{Binding Content}"
                              IconSource="{Binding Kind, Converter={StaticResource Format2Icon}}" />
        </DataTemplate>
      </fluent:TabView.TabItemTemplate>
    </fluent:TabView>
  </Grid>
</UserControl>
