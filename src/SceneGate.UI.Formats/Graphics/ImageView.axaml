<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fluent="using:FluentAvalonia.UI.Controls"
             xmlns:pgc="clr-namespace:Avalonia.PropertyGrid.Controls;assembly=Avalonia.PropertyGrid"
             xmlns:local="using:SceneGate.UI.Formats.Graphics"
             mc:Ignorable="d" d:DesignWidth="1050" d:DesignHeight="600"
             x:Class="SceneGate.UI.Formats.Graphics.ImageView"
             x:DataType="local:ImageViewModel">
  <Design.DataContext>
    <local:ImageViewModel />
  </Design.DataContext>

  <Grid RowDefinitions="Auto,*">
    <SplitView Grid.Row="1"
               IsPaneOpen="{Binding IsChecked, ElementName=InfoToggleButton}"
               PanePlacement="Right"
               OpenPaneLength="400"
               DisplayMode="Inline">

      <ScrollViewer HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto"
                    Padding="0 0 20 20"
                    PointerWheelChanged="ScrollViewerPointerWheelChanged">
        <Border BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}"
                BorderThickness="1"
                Background="{StaticResource ColorControlCheckeredBackgroundBrush}"
                HorizontalAlignment="Center"
                VerticalAlignment="Center">
          <Image Source="{Binding Bitmap}"
                 Width="{Binding Width}"
                 Height="{Binding Height}" />
        </Border>
      </ScrollViewer>

      <SplitView.Pane>
        <Border BorderThickness="2 2 0 0"
                BorderBrush="{DynamicResource AccentFillColorDefaultBrush}"
                Background="{DynamicResource ControlFillColorDefaultBrush}"
                CornerRadius="4 0 0 0">
          <StackPanel Orientation="Vertical" Spacing="10" Margin="10">
            <DockPanel Margin="5 0 0 0">
              <ToggleButton DockPanel.Dock="Right"
                            Theme="{StaticResource TransparentButton}"
                            FontSize="20"
                            IsChecked="{Binding IsChecked, ElementName=InfoToggleButton}">
                <fluent:SymbolIcon Symbol="Cancel" />
              </ToggleButton>
              <TextBlock Text="Info"
                         Theme="{StaticResource TitleTextBlockStyle}"/>
            </DockPanel>
            <pgc:PropertyGrid SelectedObject="{Binding SourceFormat}"
                              Margin="0 10 0 0"
                              AllowFilter="False"
                              AllowQuickFilter="False" />
          </StackPanel>
        </Border>
      </SplitView.Pane>
    </SplitView>

    <fluent:CommandBar Grid.Row="0" HorizontalAlignment="Center">
      <fluent:CommandBar.PrimaryCommands>
        <fluent:CommandBarButton Label="Save"
                                 IconSource="Save"
                                 Command="{Binding SaveImageCommand}"/>
        <fluent:CommandBarToggleButton Name="InfoToggleButton"
                                       Label="Object info"
                                       IconSource="Tag"
                                       IsChecked="True" />
        <fluent:CommandBarButton Label="Zoom out"
                                 IconSource="ZoomOut"
                                 Command="{Binding ZoomOutCommand}" />
        <fluent:CommandBarButton Label="Zoom in"
                                 IconSource="ZoomIn"
                                 Command="{Binding ZoomInCommand}" />
        <fluent:CommandBarElementContainer VerticalAlignment="Center"
                                           DoubleTapped="ZoomLabelDoubleTapped"
                                           ToolTip.Tip="Double click to restore zoom">
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Zoom}" />
            <TextBlock Text=" %" />
          </StackPanel>
        </fluent:CommandBarElementContainer>
      </fluent:CommandBar.PrimaryCommands>
    </fluent:CommandBar>
  </Grid>
</UserControl>
