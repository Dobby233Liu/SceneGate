<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:fluent="using:FluentAvalonia.UI.Controls"
             xmlns:paz="using:Avalonia.Controls.PanAndZoom"
             xmlns:pgc="clr-namespace:Avalonia.PropertyGrid.Controls;assembly=Avalonia.PropertyGrid"
             xmlns:local="using:SceneGate.UI.Formats.Graphics"
             mc:Ignorable="d" d:DesignWidth="1050" d:DesignHeight="600"
             x:Class="SceneGate.UI.Formats.Graphics.ImageView"
             x:DataType="local:ImageViewModel">
  <Design.DataContext>
    <local:DesignImageViewModel />
  </Design.DataContext>

  <Grid RowDefinitions="Auto,*">
    <SplitView Grid.Row="1"
               IsPaneOpen="{Binding IsChecked, ElementName=InfoToggleButton}"
               PanePlacement="Right"
               OpenPaneLength="410"
               DisplayMode="Inline">

      <ScrollViewer HorizontalScrollBarVisibility="Auto"
                    VerticalScrollBarVisibility="Auto">
        <paz:ZoomBorder Name="ZoomImageBorder"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Stretch="None"
                        ZoomSpeed="1.2"
                        ClipToBounds="True"
                        Focusable="True"
                        EnablePan="True"
                        PanButton="Left"
                        EnableZoom="True">
          <paz:ZoomBorder.ContextFlyout>
            <fluent:FAMenuFlyout>
              <!-- Avalonia doesn't support yet copying images to clipboard -->
              <fluent:MenuFlyoutItem Text="Copy image" IconSource="Copy" IsVisible="False" />
            </fluent:FAMenuFlyout>
          </paz:ZoomBorder.ContextFlyout>

          <Border BorderBrush="{DynamicResource SurfaceStrokeColorDefaultBrush}"
                  BorderThickness="1"
                  Background="{StaticResource ColorControlCheckeredBackgroundBrush}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center">
            <Image Source="{Binding Bitmap}"
                   Stretch="None"/>
          </Border>

        </paz:ZoomBorder>
      </ScrollViewer>

      <SplitView.Pane>
        <Border BorderThickness="2 2 0 0"
                BorderBrush="{DynamicResource AccentFillColorDefaultBrush}"
                Background="{DynamicResource ControlFillColorDefaultBrush}"
                CornerRadius="4 0 0 0">
          <Grid RowDefinitions="Auto,*" Margin="5">
            <DockPanel Margin="5 0 0 0">
              <ToggleButton DockPanel.Dock="Right"
                            Theme="{StaticResource TransparentButton}"
                            FontSize="20"
                            ToolTip.Tip="Close"
                            IsChecked="{Binding IsChecked, ElementName=InfoToggleButton}">
                <fluent:SymbolIcon Symbol="Cancel" />
              </ToggleButton>
              <TextBlock Text="Info"
                         Theme="{StaticResource TitleTextBlockStyle}"/>
            </DockPanel>
            <ScrollViewer Grid.Row="1"
                          VerticalScrollBarVisibility="Auto"
                          HorizontalScrollBarVisibility="Auto"
                          Margin="0 10 0 0" >
              <Panel>
                <pgc:PropertyGrid SelectedObject="{Binding SourceFormat}"
                                  Classes="Simple ReadOnly"
                                  IsVisible="{Binding !IsRawImage}"/>
                <local:RawImageOptionsView DataContext="{Binding RawImageOptions}"
                                           IsVisible="{ReflectionBinding $parent.DataContext.IsRawImage}"/>
              </Panel>
            </ScrollViewer>
          </Grid>
        </Border>
      </SplitView.Pane>
    </SplitView>

    <Border Grid.Row="1"
            BorderThickness="2"
            BorderBrush="{DynamicResource AccentFillColorDefaultBrush}"
            Background="{DynamicResource ControlFillColorDefaultBrush}"
            CornerRadius="4"
            HorizontalAlignment="Left"
            VerticalAlignment="Bottom"
            Margin="10"
            Padding="10">
      <Border.IsVisible>
        <MultiBinding Converter="{x:Static BoolConverters.And}">
          <Binding ElementName="ShowPaletteButton" Path="IsChecked" />
          <Binding Path="IsSinglePalette" />
        </MultiBinding>
      </Border.IsVisible>
        <Image Source="{Binding PaletteImage}"
               Stretch="None"/>
    </Border>
    
    <fluent:CommandBar Grid.Row="0"
                       HorizontalAlignment="Center"
                       DefaultLabelPosition="Right">
      <fluent:CommandBar.PrimaryCommands>
        <fluent:CommandBarToggleButton Name="ShowPaletteButton"
                                       IconSource="ColorBackground"
                                       Label="Palette"
                                       IsChecked="True"
                                       IsEnabled="{Binding IsSinglePalette}" />
        <fluent:CommandBarToggleButton Name="InfoToggleButton"
                                       Label="Info"
                                       IconSource="Tag"
                                       IsChecked="True" />
        <fluent:CommandBarSeparator />
        <fluent:CommandBarButton Label="Save"
                                 IconSource="Save"
                                 Command="{Binding SaveImageCommand}"/>
        <fluent:CommandBarButton Label="Import"
                                 IconSource="Upload"
                                 IsEnabled="False"/>
        <fluent:CommandBarSeparator />
        <fluent:CommandBarButton IconSource="ZoomOut"
                                 Click="ZoomOutClick" />
        <fluent:CommandBarButton IconSource="ZoomIn"
                                 Click="ZoomInClick" />
        <fluent:CommandBarElementContainer VerticalAlignment="Center"
                                           DoubleTapped="ZoomLabelDoubleTapped"
                                           ToolTip.Tip="Double click to restore zoom">
          <StackPanel Orientation="Horizontal">
            <TextBlock Text="Zoom: "
                       FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                       FontSize="12"
                       VerticalAlignment="Center" />
            <TextBlock Text="{Binding ZoomX, ElementName=ZoomImageBorder, StringFormat={}{0:F2}}"
                       FontFamily="{DynamicResource ContentControlThemeFontFamily}"
                       FontSize="12"
                       VerticalAlignment="Center"
                       Width="40"/>
          </StackPanel>
        </fluent:CommandBarElementContainer>
        <fluent:CommandBarSeparator />
      </fluent:CommandBar.PrimaryCommands>

      <fluent:CommandBar.SecondaryCommands>
        <fluent:CommandBarToggleButton Label="Use first color for alpha"
                                       IconSource="View"
                                       IsEnabled="{Binding IsSinglePalette}"
                                       IsChecked="{Binding IsFirstColorTransparent}" />
        <fluent:CommandBarSeparator />
        <fluent:CommandBarToggleButton Label="Use all palettes"
                                       IconSource="ColorBackgroundFilled"
                                       IsEnabled="{Binding CanChangeToMultiPalette}"
                                       IsChecked="{Binding !IsSinglePalette}" />
        <fluent:CommandBarElementContainer IsEnabled="{Binding IsSinglePalette}">
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
            <TextBlock Text="Palette: "
                       VerticalAlignment="Center" />
            <fluent:NumberBox Value="{Binding PaletteIndex}"
                              Margin="5 0"
                              SpinButtonPlacementMode="Compact"
                              Width="85"
                              Minimum="0"
                              Maximum="{Binding MaximumPaletteIndex}" />
          </StackPanel>
        </fluent:CommandBarElementContainer>
      </fluent:CommandBar.SecondaryCommands>
    </fluent:CommandBar>
  </Grid>
</UserControl>
